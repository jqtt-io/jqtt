##====================================================================
## jqtt.io configuration
##====================================================================

##--------------------------------------------------------------------
## Services
##--------------------------------------------------------------------

jqtt.service.tcp.enabled = true
jqtt.service.tcp.host = 127.0.0.1
jqtt.service.tcp.port = 1883
jqtt.service.tcp.netty.reader_idle_time = 10000
jqtt.service.tcp.netty.writer_idle_time = 10000
jqtt.service.tcp.netty.all_idle_time = 10000

##--------------------------------------------------------------------
## Cluster
##--------------------------------------------------------------------

#
# - io.jqtt.clusterClass.factory.AtomixClusterFactory
jqtt.cluster.class = io.jqtt.cluster.factory.AtomixClusterFactory

jqtt.cluster.id = jqtt
jqtt.cluster.member.id = @UUID@
jqtt.cluster.member.host = 127.0.0.1
jqtt.cluster.member.port = 5679

jqtt.cluster.atomix.membership = swim
jqtt.cluster.atomix.discovery = multicast

jqtt.cluster.atomix.discovery.bootstrap.nodes = member1@127.0.0.1:5679, member2@127.0.0.1:5679

##--------------------------------------------------------------------
## Authenticator
##--------------------------------------------------------------------

jqtt.authenticator.allow_anonymous = true
jqtt.authenticator.class = io.jqtt.broker.protocol.authenticator.factory.FileAuthenticationFactory
jqtt.authenticator.file.path = users.conf

# jqtt.authenticator.class = io.jqtt.broker.protocol.authenticator.impl.DbAuthenticator
# jqtt.authenticator.db.driver = org.postgresql.Driver
# jqtt.authenticator.db.url = jdbc:postgresql://localhost/test?user=dbuser&password=dbpassword
# jqtt.authenticator.db.query = SELECT password FROM users WHERE username=?
# jqtt.authenticator.db.digest = SHA-256
